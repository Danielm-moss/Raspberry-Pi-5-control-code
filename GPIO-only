#include <iostream>
#include <gpiod.hpp>
#include <thread>
#include <chrono>

using namespace std;

int main() {

    const char* CHIP = "/dev/gpiochip4";
    const unsigned CAPTURE = 26;
    const unsigned BUTTON = 6;

    gpiod::chip chip{CHIP};

    gpiod::line_settings cap_behavior;
    cap_behavior.set_direction(gpiod::line::direction::OUTPUT);
    cap_behavior.set_output_value(gpiod::line::value::INACTIVE);

    gpiod::line_settings button_behavior;
    button_behavior.set_direction(gpiod::line::direction::INPUT);

    auto req = chip.prepare_request()
    .add_line_settings(CAPTURE, cap_behavior)
    .add_line_settings(BUTTON, button_behavior)
    .do_request();

    bool flashing = false;

    while(true){
        
        if(req.get_value(BUTTON) == gpiod::line::value::ACTIVE && !flashing){
            flashing = true;
            cout<<"button pressed"<<endl;
            req.set_value(CAPTURE, gpiod::line::value::ACTIVE);
            cout<<"Starting capture"<<endl;
            std::this_thread::sleep_for(std::chrono::milliseconds(20));
            flashing = false;
            req.set_value(CAPTURE, gpiod::line::value::INACTIVE);
            cout<<"Capture done"<<endl;
        }
    }
}

// g++ -std=c++20 ./scripts/Intro1.cpp -lgpiodcxx -o intro1

// sudo ./intro1
